name: Reusable AWS Deploy Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: ''
      version:
        required: false
        type: string
        default: ''
      pr-number:
        required: false
        type: string
        default: ''
      outputs-file:
        required: false
        type: string
        default: ''
    secrets:  
      AWS_REGION:
        required: true  
      AWS_ROLE_TO_ASSUME:
        required: true        
    outputs:
      deployment-outputs:
        description: "Outputs from the deployment"
        value: ${{ jobs.deploy.outputs.deployment-outputs }}

jobs:
  unit-tests:
    name: Run Unit Tests
    uses: ./.github/workflows/reusable-test.yml

  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-24.04-arm
    outputs:
      deployment-outputs: ${{ steps.deploy.outputs.outputs }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Deploy
        id: deploy
        run: |
          # Build the application
          make build
          
          # Prepare deployment command with environment
          DEPLOY_CMD="make deploy ENVIRONMENT=${{ inputs.environment }}"
          
          # Add git sha
          DEPLOY_CMD="$DEPLOY_CMD SHA=${{ github.sha }}"
          
          # Add version if provided
          if [ -n "${{ inputs.version }}" ]; then
            DEPLOY_CMD="$DEPLOY_CMD VERSION=${{ inputs.version }}"
          fi
          
          # Add PR number if provided
          if [ -n "${{ inputs.pr-number }}" ]; then
            DEPLOY_CMD="$DEPLOY_CMD PR_NUMBER=${{ inputs.pr-number }}"
          fi
          
          echo "Deploying to ${{ inputs.environment }} with command: $DEPLOY_CMD"
          
          # Execute the deployment
          $DEPLOY_CMD
          
          # If outputs file is specified, run a separate CDK command to generate outputs
          if [ -n "${{ inputs.outputs-file }}" ]; then
            echo "Generating outputs file: ${{ inputs.outputs-file }}"
            cdk deploy --app "$(pwd)/build/bin/aws-infra-sandbox" --output build/cdk.out --all \
              --require-approval never \
              --context environment=${{ inputs.environment }} \
              $(if [ -n "${{ inputs.pr-number }}" ]; then echo "--context pr_number=${{ inputs.pr-number }}"; fi) \
              $(if [ -n "${{ inputs.version }}" ]; then echo "--context version=${{ inputs.version }}"; fi) \
              $(if [ -n "${{ github.sha }}" ]; then echo "--context sha=${{ github.sha }}"; fi) \
              --outputs-file ${{ inputs.outputs-file }} \
              --no-execute
            
            # Extract and format outputs for PR comment if outputs file exists
            if [ -f "${{ inputs.outputs-file }}" ]; then
              OUTPUTS=$(cat ${{ inputs.outputs-file }} | jq -r 'to_entries[] | "\(.key): \(.value.value)"')
              echo "outputs<<EOF" >> $GITHUB_OUTPUT
              echo "$OUTPUTS" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            fi
          fi
