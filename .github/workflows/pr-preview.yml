name: PR Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

# Import shared configuration
jobs:
  unit-tests:
    name: Run Unit Tests
    uses: ./.github/workflows/reusable-test.yml

  deploy-preview:
    name: Deploy PR Preview
    needs: unit-tests
    uses: ./.github/workflows/reusable-aws-deploy.yml
    with:
      environment: preview
      pr-number: ${{ github.event.pull_request.number }}
      outputs-file: pr-outputs.json
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME_PROD }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  comment-pr:
    name: Comment on PR
    needs: deploy-preview
    runs-on: ubuntu-latest
    if: ${{ needs.deploy-preview.outputs.deployment-outputs != '' }}
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const outputs = `${{ needs.deploy-preview.outputs.deployment-outputs }}`;
            const body = `## ðŸš€ Preview Environment Deployed
            
            ### Environment Details:
            \`\`\`
            ${outputs}
            \`\`\`
            
            This preview environment will be automatically destroyed when the PR is closed.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  cleanup-preview:
    name: Cleanup Preview on PR Close
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Destroy PR Preview
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "Destroying PR preview for PR #${PR_NUMBER}"
          
          make destroy -- --all --context environment=preview --context prNumber=${PR_NUMBER}
